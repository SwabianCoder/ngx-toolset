name: PR validation

on:
  workflow_call:
    inputs:
      PACKAGE_NAME:
        required: true
        type: string

jobs:
  validate:
    name: Validate
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout main
        uses: actions/checkout@v3
        with:
          ref: "main"
          path: main
      - name: Checkout PR branch
        uses: actions/checkout@v3
        with:
          path: pr
      - name: Node ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Check commit authors
        run: |
          dependabotName="dependabot[bot]"
          committerName="web-flow"
          if [ "${{ github.event.pull_request.user.login }}" = "$dependabotName" ];
          then
            echo "$dependabotName was detected as PR creator"
            wget --quiet --method GET -O commits.json "${{ github.event.pull_request._links.commits.href }}"
            committers=$( jq -r  '[.[] | .committer | .login] | unique' commits.json )
            authors=$( jq -r  '[.[] | .author | .login] | unique' commits.json )
            committersLength=$( jq '. | length' <<< "$committers" )
            authorsLength=$( jq '. | length' <<< "$authors" )
            echo "Committer count: $committersLength"
            echo "Author count: $authorsLength"
            if [ $committersLength -gt 1 ] || [ $authorsLength -gt 1 ];
            then
              echo 'There are too many committers and/or authors for a valid PR branch by $dependabotName'
              exit 1
            else
              committer=$( jq -r '.[0]' <<< $committers )
              author=$( jq -r '.[0]' <<< $authors )
              echo "Committer: $committer"
              echo "Author: $author"
              if [ $committer != "$committerName" ] || [ $author != "$dependabotName" ];
              then
                echo 'Committer and/or author do not have a valid value'
                exit 1
              else
                echo 'Committer and author are valid'
                echo "skipVersionValidation=True" >> $GITHUB_ENV
              fi
            fi
          else
            echo "$dependabotName was not detected as PR creator"
            echo "skipVersionValidation=False" >> $GITHUB_ENV
          fi
      - name: Read PR package version
        if: ${{ env.skipVersionValidation == 'False' }}
        working-directory: ./pr
        run: |
          prPackageVersion=$( jq -r '.version' package.json )
          echo "prPackageVersion=$prPackageVersion" >> $GITHUB_ENV
          echo "Current PR version: $prPackageVersion"
      - name: Validate package version change
        if: ${{ env.skipVersionValidation == 'False' }}
        run: |
          mainPackageVersion=$( jq -r '.version' ./main/package.json )
          echo "PR package version: ${{ env.prPackageVersion }}"
          echo "Main package version: $mainPackageVersion"
          if $(dpkg --compare-versions ${{ env.prPackageVersion }} gt $mainPackageVersion);
          then
            echo 'Version changed'
          else
            echo 'Version did not change'
            exit 1
          fi
      - name: Validate changelog entry
        uses: mindsers/changelog-reader-action@v2
        with:
          validation_level: error
          version: ${{ env.packageVersion }}
          path: ./pr/projects/${{ inputs.PACKAGE_NAME }}/CHANGELOG.md
      - name: Install dependencies
        working-directory: ./pr
        run: |
          npm ci --ignore-scripts
      - name: Check code style
        working-directory: ./pr
        run: |
          npm run lint:${{ inputs.PACKAGE_NAME }}
      - name: Run unit tests
        working-directory: ./pr
        run: |
          npm run test:unit:${{ inputs.PACKAGE_NAME }}:no-watch
      - name: Build lib
        working-directory: ./pr
        run: |
          npx -c 'ng b @ngx-toolset/${{ inputs.PACKAGE_NAME }}'
          # Somehow calling build script via npm run does not work as of now.
          # npm run build:${{ inputs.PACKAGE_NAME }}
